#include <Adafruit_NeoPixel.h>
#include <Wire.h>
#include "I2Cdev.h"
#include <SHT2x.h>
float sensor_tem;
#define  sensorPin  4
const int buzzer_pin =  6;
boolean buzzer_speak;
int state;
#define temp1    20
#define temp2    28
#define temp3    30
#include "U8glib.h"
U8GLIB_SSD1306_128X64 u8g(U8G_I2C_OPT_NONE);  
static unsigned char u8g_logo_bits1[] U8G_PROGMEM = {
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0x7F,0xFC,0xFF,
0xFF,0x3F,0xFE,0xFF,0xFF,0x1F,0xFF,0xF9,0xFF,0x0F,0x00,0xF0,0xFF,0xC3,0xFF,0xF0,
0xFF,0xC1,0x3F,0xFC,0xFF,0x1C,0x1F,0xFE,0x3F,0x1E,0x0F,0xFF,0x8F,0x3F,0xC6,0xFF,
0xFF,0x3F,0xE1,0xFF,0xFF,0xFF,0xF8,0xFF,0xFF,0x1F,0xF8,0xFF,0xFF,0x87,0xF8,0xFF,
0x7F,0x70,0xF8,0xFF,0x0F,0x3F,0xFC,0xF3,0xFF,0x1F,0x00,0xE0,0xFF,0x0F,0xFF,0xE1,
0xFF,0xC3,0xFF,0xF0,0xFF,0x91,0x7F,0xF8,0x7F,0x1C,0x3F,0xFC,0x1F,0x3F,0x1E,0xFE,
0xFF,0x3F,0x8E,0xFF,0xFF,0x3F,0xC2,0xFF,0xFF,0xFF,0xF1,0xFF,0xFF,0x3F,0xFC,0xFF,
0xFF,0x07,0xFF,0xFF,0xFF,0xE0,0xFF,0xFF,0x07,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,//多0
};
static unsigned char u8g_logo_bits2[] U8G_PROGMEM = {
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,0x7F,0xFC,0xFF,
0xFF,0xFF,0xF8,0xFF,0x9F,0xFF,0xF8,0xE7,0x1F,0x00,0x00,0xC0,0x9F,0xE7,0xFF,0xE3,
0x8F,0xC7,0xC7,0xF1,0x87,0xC3,0x1F,0xF9,0xFF,0xF1,0x7F,0xF8,0x7F,0xFC,0xFF,0xF0,
0x1F,0xFF,0x1F,0xF1,0x4F,0x00,0x00,0xFE,0xFF,0xF9,0xE3,0xFF,0xFF,0xF1,0xE3,0xFF,
0xFF,0xF8,0xE3,0xFF,0x7F,0xFC,0xE3,0xFF,0x7F,0xFC,0xE3,0xF1,0x3F,0x00,0x00,0xE0,
0x7F,0xFE,0xE0,0xFF,0xFF,0x7F,0xE0,0xFF,0xFF,0x3F,0xE2,0xFF,0xFF,0x1F,0xE3,0xFF,
0xFF,0x8F,0xE3,0xFF,0xFF,0xC7,0xE3,0xFF,0xFF,0xE3,0xE3,0xFF,0xFF,0xF8,0xE3,0xFF,
0x3F,0x3C,0xE0,0xFF,0x8F,0xFF,0xE0,0xFF,0xE7,0xFF,0xF1,0xFF,0xFF,0xFF,0xFF,0xFF,//穿1
};
static unsigned char u8g_logo_bits3[] U8G_PROGMEM = {
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x9F,0xFF,0xFF,0xFF,0x1F,0xFE,0xFF,
0xFF,0x3F,0xFC,0xFF,0xFF,0x7F,0xFC,0xFF,0xFF,0x7F,0xFC,0xE7,0xFF,0x7F,0xFC,0xC3,
0x03,0x00,0x00,0x80,0xFF,0x3F,0xFE,0xFF,0xFF,0x1F,0xFE,0xFF,0xFF,0x1F,0xFC,0xFF,
0xFF,0x8F,0xFC,0xF1,0xFF,0x8F,0xFC,0xF0,0xFF,0xC7,0x78,0xF8,0xFF,0xE3,0x39,0xFE,
0xFF,0xE1,0x19,0xFF,0xFF,0xE1,0xC1,0xFF,0xFF,0xE0,0xE3,0xFF,0x7F,0xE0,0xE3,0xFF,
0x3F,0xE2,0xC7,0xFF,0x8F,0xE3,0xC7,0xFF,0xC7,0xE3,0x8F,0xFF,0xF3,0xE3,0x1F,0xFF,
0xFF,0xE3,0x13,0xFE,0xFF,0xE3,0x38,0xF8,0xFF,0x23,0x7C,0xE0,0xFF,0x03,0xFF,0x00,
0xFF,0x83,0xFF,0xE1,0xFF,0xC3,0xFF,0xE7,0xFF,0xE7,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,//衣2
};
static unsigned char u8g_logo_bits4[] U8G_PROGMEM = {
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFC,0xF9,0xFF,0xFF,0xF0,0xE1,0xFF,
0xFF,0xF8,0xF1,0xFF,0x8F,0xF8,0xF8,0xFF,0x0F,0xF8,0xF8,0xFF,0x8F,0xF8,0xFC,0xCF,
0xCF,0x78,0x00,0x80,0xCF,0x40,0x46,0xCC,0x07,0x00,0x66,0xCC,0xC7,0x38,0x63,0xCC,
0xE7,0x18,0x63,0xCC,0xF3,0x98,0x73,0xCC,0xF3,0xC8,0x31,0xC6,0xF9,0xF8,0x39,0xC6,
0xFF,0x88,0x38,0xC6,0xFF,0xE0,0x1C,0xC7,0xFF,0x78,0x1E,0xC7,0x1F,0x38,0x9E,0xC7,
0x83,0x38,0x8F,0xC7,0xC3,0x98,0xCF,0xC7,0xFF,0xC8,0xC7,0xC7,0xFF,0xF8,0xE3,0xC7,
0xFF,0xF8,0xF1,0xE7,0xFF,0xF8,0xF9,0xE3,0xFF,0xF8,0xFC,0xE3,0xFF,0x78,0x8E,0xE1,
0xFF,0x18,0x3F,0xF0,0xFF,0xC8,0x7F,0xF8,0xFF,0xFC,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,//物3
};
static unsigned char u8g_logo_bits5[] U8G_PROGMEM = {
  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFC,0xFF,0x9F,0xFF,0xF1,0xFF,
  0x1F,0xFE,0xE3,0xFF,0x3F,0xFE,0xC3,0xFF,0x3F,0xFC,0xC7,0xFF,0x7F,0xFE,0xE7,0xE7,
  0x7F,0xFE,0xFF,0xC3,0xFF,0x03,0x00,0xC0,0xF9,0xF3,0xE7,0xFF,0xF3,0xF9,0xE7,0xFF,
  0xC3,0xF9,0xE7,0xFF,0x87,0xF9,0xE7,0xFF,0x8F,0xFC,0xE7,0xFF,0x8F,0xFC,0xE7,0xFF,
  0xFF,0xFC,0xE7,0xFF,0x7F,0xFE,0xE7,0xF1,0x7F,0x0E,0x00,0xE0,0x3F,0xFE,0xE7,0xFF,
  0x3F,0xFE,0xE7,0xFF,0x3F,0xFF,0xE7,0xFF,0x1F,0xFF,0xE7,0xFF,0x03,0xFF,0xE7,0xFF,
  0x8F,0xFF,0xE7,0xFF,0x8F,0xFF,0xE7,0xFF,0x8F,0xFF,0xE7,0xFF,0x8F,0xFF,0xE7,0xC7,
  0x8F,0x01,0x00,0x80,0x8F,0xFF,0xFF,0xFF,0x8F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,//注0
};
static unsigned char u8g_logo_bits6[] U8G_PROGMEM = {
  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,
  0xFF,0x7F,0xFC,0xFF,0xFF,0x7F,0x7C,0xFE,0x3F,0x00,0x00,0xFC,0xFF,0xE7,0xC7,0xFF,
  0xFF,0xC7,0xC7,0xFF,0xFF,0x8F,0xE3,0xFF,0xFF,0x8F,0xF3,0xE3,0x03,0x00,0x00,0xC0,
  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFC,0x7F,0xFC,0x3F,0xFE,
  0x7F,0xFC,0x3F,0xFE,0x7F,0x00,0x00,0xFE,0x7F,0xFC,0x3F,0xFE,0x7F,0xFC,0x3F,0xFE,
  0x7F,0x00,0x00,0xFE,0x7F,0x9C,0x3F,0xFE,0xFF,0x39,0xFE,0xFF,0x3F,0x71,0xFC,0xFC,
  0x3F,0xF1,0xF8,0xF1,0x9F,0xF1,0x98,0xE3,0x9F,0xF1,0x9F,0xC3,0x8F,0xF1,0x1F,0xC7,
  0x87,0xE1,0x1F,0xFE,0xFF,0x03,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,//意1
};
static unsigned char u8g_logo_bits8[] U8G_PROGMEM = {
  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFC,0xFF,0xFF,0xFF,0xF1,0xFF,
  0xFF,0xFF,0xE3,0xFF,0xE3,0xFF,0xE3,0xFF,0x87,0xFF,0xE3,0xC7,0x0F,0x01,0x00,0x80,
  0x0F,0xFF,0xFF,0xFF,0x9F,0xF9,0xFF,0xFF,0xFF,0xC9,0xFF,0xFC,0xFF,0x0C,0x00,0xF8,
  0xFF,0x8C,0xFF,0xF8,0x7F,0x8E,0xFF,0xF8,0x7F,0x8E,0xFF,0xF8,0x7F,0x8E,0xFF,0xF8,
  0x3F,0x8F,0xFF,0xF8,0x3F,0x0F,0x00,0xF8,0x1F,0x8F,0xE3,0xF8,0x03,0xCF,0xE3,0xFF,
  0x87,0xFF,0xE3,0xFF,0x8F,0x9F,0x23,0xFF,0x8F,0x1F,0x62,0xFC,0x8F,0x8F,0xE3,0xF8,
  0x8F,0xC7,0xE3,0xE1,0x8F,0xC7,0xE3,0xC3,0x87,0xE3,0xE3,0xC3,0x8F,0xF9,0xE3,0xC7,
  0xFF,0x7C,0xE0,0xC7,0x7F,0xFE,0xE1,0xFF,0xFF,0xFF,0xF1,0xFF,0xFF,0xFF,0xFF,0xFF,//凉3
};
static unsigned char u8g_logo_bits7[] U8G_PROGMEM = {
  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFC,
  0xFF,0xFF,0x7F,0xF8,0x1F,0x00,0x00,0xF0,0xFF,0x3F,0xFE,0xFF,0xFF,0x3F,0xFE,0xFF,
  0xFF,0x3F,0xFE,0xFF,0xFF,0x3F,0xFE,0xFF,0xFF,0x3F,0xFE,0xFF,0xFF,0x3F,0xFE,0xFF,
  0xFF,0x3F,0xFE,0xF3,0xFF,0x3F,0xFE,0xE1,0x03,0x00,0x00,0xC0,0xFF,0x3F,0xF8,0xFF,
  0xFF,0x3F,0xF9,0xFF,0xFF,0x1F,0xF9,0xFF,0xFF,0x1F,0xF3,0xFF,0xFF,0x1F,0xF3,0xFF,
  0xFF,0x8F,0xE7,0xFF,0xFF,0x8F,0xC7,0xFF,0xFF,0xC7,0xCF,0xFF,0xFF,0xE3,0x8F,0xFF,
  0xFF,0xE3,0x1F,0xFF,0xFF,0xF1,0x3F,0xFE,0xFF,0xF8,0x3F,0xF8,0x7F,0xFE,0x7F,0xE0,
  0x1F,0xFF,0xFF,0x01,0xCF,0xFF,0xFF,0xE3,0xE3,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,//天2
};
static unsigned char u8g_logo_bits9[] U8G_PROGMEM = {
  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x9F,0xFF,0xFF,0xFF,0x1F,0xF8,
0xF3,0xFF,0x1F,0xE1,0xC7,0xFF,0x1F,0xE3,0x8F,0xFF,0x1F,0xE3,0x0F,0xFF,0x1F,0xCF,
0x1F,0x00,0x00,0x80,0x9F,0xE0,0x1F,0xFF,0x7F,0xE2,0x1F,0xFF,0x7F,0xE2,0x13,0xFF,
0x7F,0x02,0x00,0xE7,0x3F,0xE3,0x1F,0xC7,0x3F,0xE3,0x1F,0xC7,0x3F,0xE3,0x1F,0xE3,
0x9F,0x83,0x1F,0xE3,0x9F,0x13,0x00,0xF1,0x89,0x13,0x03,0xF1,0xC3,0x11,0x23,0xF9,
0xC7,0x11,0x23,0xF8,0xCF,0x11,0x23,0xFC,0xC7,0x11,0x23,0xFC,0xC7,0x19,0x20,0xFE,
0xC7,0x18,0x13,0x9C,0xC7,0x1C,0x9F,0x98,0x47,0xFC,0xCF,0x98,0x7F,0xFE,0xE3,0x81,
0x3F,0xFF,0xF1,0x83,0x9F,0xFF,0xFC,0x87,0xCF,0x7F,0xFE,0x9F,0xFF,0xFF,0xFF,0xFF,//减0
};
static unsigned char u8g_logo_bits10[] U8G_PROGMEM = {
  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0x7F,0xF8,0xFF,
0xFF,0x7F,0xFC,0xFF,0xFF,0x7F,0xFC,0xFF,0xFF,0x7F,0xFC,0xFF,0xFF,0x7F,0xFC,0xFF,
0xFF,0x79,0xFC,0xFF,0xFF,0x71,0x8C,0xFF,0xFF,0x70,0x3C,0xFE,0xFF,0x78,0x7C,0xF8,
0x7F,0x78,0xFC,0xF0,0x7F,0x7C,0xFC,0xE1,0x3F,0x7E,0xFC,0xC3,0x3F,0x7E,0xFC,0xC7,
0x1F,0x7F,0xFC,0xC7,0x9F,0x7F,0x7C,0xFE,0xCF,0x7F,0x7C,0xFC,0xE7,0x7F,0x3C,0xF8,
0xF3,0x7F,0x1C,0xFE,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0x87,0xFF,0xFF,0xFF,0xC3,0xFF,
0xFF,0xFF,0xF0,0xFF,0xFF,0x7F,0xF8,0xFF,0xFF,0x1F,0xFE,0xFF,0xFF,0x87,0xFF,0xFF,
0xFF,0xE0,0xFF,0xFF,0x1F,0xFC,0xFF,0xFF,0xC3,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,//少1
};
static unsigned char u8g_logo_bits11[] U8G_PROGMEM = {
  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0x7F,0xFC,0xFF,
0xFF,0x7F,0xFC,0xFF,0xFF,0x7F,0xFC,0xFF,0xFF,0x7F,0xFC,0xFF,0xFF,0x7F,0xFC,0xFF,
0xCF,0x7F,0xFC,0xF3,0x0F,0x00,0x00,0xE0,0x8F,0x7F,0xFC,0xF3,0x8F,0x7F,0xFC,0xF3,
0x8F,0x7F,0xFC,0xF3,0x8F,0x7F,0xFC,0xF3,0x8F,0x7F,0xFC,0xF3,0x8F,0x7F,0xFC,0xF3,
0x8F,0x7F,0xFC,0xF3,0x8F,0x7F,0xFC,0xF3,0x0F,0x00,0x00,0xF0,0x8F,0x7F,0xFC,0xF3,
0x8F,0x7F,0xFC,0xE3,0xFF,0x7F,0xFC,0xFF,0xFF,0x7F,0xFC,0xFF,0xFF,0x7F,0xFC,0xFF,
0xFF,0x7F,0xFC,0xFF,0xFF,0x7F,0xFC,0xFF,0xFF,0x7F,0xFC,0xFF,0xFF,0x7F,0xFC,0xFF,
0xFF,0x7F,0xFC,0xFF,0xFF,0x7F,0xFC,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,//中2
};
static unsigned char u8g_logo_bits12[] U8G_PROGMEM = {
  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0x00,0x00,0xFC,
0xFF,0xF8,0x3F,0xFE,0xFF,0xF8,0x3F,0xFE,0xFF,0x00,0x00,0xFE,0xFF,0xF8,0x3F,0xFE,
0xFF,0xF8,0x3F,0xFE,0xFF,0x00,0x00,0xFE,0xFF,0x38,0x3E,0xFE,0xFF,0x3F,0xFE,0xF1,
0xFF,0x3F,0xE2,0xF0,0x3F,0x00,0x40,0xFC,0xFF,0x3F,0x3E,0xFE,0xFF,0x3F,0x0E,0xFF,
0xFF,0x3F,0x86,0xC7,0x03,0x00,0x00,0x80,0xFF,0xFF,0xF0,0xFF,0xFF,0x3F,0x7E,0xFE,
0xFF,0x09,0x00,0xFC,0xFF,0xE3,0x7F,0xFC,0x7F,0xF0,0x7F,0xFC,0x0F,0xF3,0x7F,0xFC,
0xE1,0x03,0x00,0xFC,0xFF,0xF3,0x7F,0xFC,0xFF,0xF3,0x7F,0xFC,0xFF,0xF3,0x7F,0xFC,
0xFF,0x03,0x00,0xFC,0xFF,0xF3,0x7F,0xFC,0xFF,0xF3,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,//暑3
};
static unsigned char u8g_logo_bits13[] U8G_PROGMEM = {
  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x9F,0xFF,0xE7,0xCF,0x1F,0xFE,
0x07,0x00,0x9F,0xFF,0xC7,0x8F,0x9F,0xFF,0xC7,0x8F,0x9F,0xFF,0xC7,0x8F,0x9F,0xFF,
0xC7,0x88,0x9F,0xFF,0xC7,0x88,0x9F,0xC7,0xC7,0x8C,0x1F,0x80,0xC7,0x8C,0x9F,0xFF,
0xC7,0x8C,0x9F,0xFF,0xC7,0x8C,0x9F,0xFF,0xC7,0x8C,0x9F,0xFF,0xC7,0x8C,0x9F,0xFF,
0xC7,0x8C,0x9C,0xE7,0xC7,0x8C,0x00,0xC0,0xC7,0x8C,0xF8,0xE3,0x47,0x8C,0xF8,0xE3,
0x47,0x8C,0xF8,0xE3,0x47,0xCC,0xF8,0xE3,0x67,0xFC,0xF8,0xE3,0x3F,0xF0,0xF8,0xE3,
0x3F,0xE2,0xF8,0xE3,0x3F,0x87,0xF8,0xE3,0x9F,0x8F,0x00,0xE0,0x8F,0x8F,0xF8,0xE3,
0xCF,0x9F,0xF8,0xE3,0xE7,0xFF,0xF8,0xF3,0xF3,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,//贴0
};
static unsigned char u8g_logo_bits14[] U8G_PROGMEM = {
  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0x1F,0xFF,0xFF,0xFF,0x3F,0xFE,0xFF,0xFF,0x7F,0xF8,0xFF,0xFF,0xFF,0xF0,0xFF,
0xFF,0xFF,0xF0,0xFF,0xFF,0xFF,0xF1,0xFF,0xFF,0xE3,0xF1,0xFF,0xFF,0xC3,0xF9,0xFF,
0xFF,0xE3,0xFF,0xFF,0xFF,0xE3,0xFF,0xFF,0x3F,0xE3,0xFF,0xF9,0x3F,0xE3,0xFF,0xF1,
0x1F,0xE3,0xFF,0xE3,0x1F,0xE3,0xFF,0xC3,0x1F,0xE3,0xFF,0xC7,0x0F,0xE3,0xFF,0x87,
0x87,0xE3,0x7F,0x86,0x83,0xE3,0x7F,0xCE,0xFF,0xE3,0x7F,0xFE,0xFF,0xE3,0x7F,0xFE,
0xFF,0xE3,0x7F,0xFE,0xFF,0xE3,0x7F,0xFE,0xFF,0xE3,0x3F,0xFC,0xFF,0x07,0x00,0xFC,
0xFF,0x07,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,//心1
};
static unsigned char u8g_logo_bits15[] U8G_PROGMEM = {
  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x8F,0xCF,0xFF,0xFC,
0x1F,0x0F,0x00,0xF8,0x3F,0x8E,0xFF,0xFC,0x3F,0x8E,0xFF,0xFC,0xFF,0x83,0xFF,0xFC,
0xFF,0x89,0xFF,0xFC,0xFF,0x09,0x00,0xFC,0xFF,0x89,0xFF,0xFC,0xE3,0x89,0xFF,0xFC,
0xC7,0x8C,0xFF,0xFC,0x8F,0x8C,0xFF,0xFC,0xCF,0x0C,0x00,0xFC,0x7F,0x8E,0xFF,0xFC,
0x7F,0xCE,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0x3F,0xF2,0xFF,0xF3,0x3F,0x03,0x00,0xE0,
0x3F,0x63,0x8C,0xF1,0x1F,0x63,0x8C,0xF1,0x03,0x63,0x8C,0xF1,0x0F,0x63,0x8C,0xF1,
0x8F,0x63,0x8C,0xF1,0x8F,0x63,0x8C,0xF1,0x8F,0x63,0x8C,0xF1,0x8F,0x63,0x8C,0xF1,
0x8F,0x63,0x8C,0x81,0x0F,0x00,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,//温2
};
static unsigned char u8g_logo_bits16[] U8G_PROGMEM = {
  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xF8,0xFF,
0xFF,0xFF,0xF0,0xE7,0x9F,0xFF,0xF9,0xC3,0x1F,0x00,0x00,0x80,0x1F,0x9F,0x9F,0xFF,
0x1F,0x1F,0x1E,0xFE,0x1F,0x1F,0x1F,0xFF,0x1F,0x1F,0x1F,0xE3,0x1F,0x00,0x00,0xC0,
0x1F,0x1F,0x1F,0xFF,0x1F,0x1F,0x1F,0xFF,0x1F,0x1F,0x1F,0xFF,0x1F,0x1F,0x1F,0xFF,
0x1F,0x1F,0x00,0xFF,0x1F,0x1F,0x1F,0xFF,0x9F,0xFF,0x7F,0xFE,0x9F,0x03,0x00,0xFC,
0x8F,0x9F,0x3F,0xFC,0x8F,0x3F,0x1F,0xFE,0x8F,0x3F,0x1E,0xFF,0xCF,0x7F,0x8E,0xFF,
0xCF,0xFF,0xC0,0xFF,0xC7,0xFF,0xE1,0xFF,0xE7,0xFF,0xC0,0xFF,0xE7,0x3F,0x04,0xFF,
0xF3,0x0F,0x1F,0xC0,0xF3,0xE1,0xFF,0xC0,0x19,0xFC,0xFF,0xE7,0xFF,0xFF,0xFF,0xFF,//度3
};
void draw(void) {
      sensor_tem = SHT2x.GetTemperature() ;
      Serial.println(sensor_tem);
      Serial.print("--");   
      Serial.println(SHT2x.GetHumidity());
      delay(100);
      state = digitalRead(sensorPin);
      u8g.setFont(u8g_font_7x14);
      u8g.setPrintPos(10,10);
      u8g.print(sensor_tem);
      u8g.setPrintPos(60,10);
      u8g.print("'C");
      u8g.setPrintPos(10, 60); 
      u8g.print(SHT2x.GetHumidity());
      u8g.setPrintPos(60,60);
      u8g.print("%RH");
    if (state == 1){    
      if (sensor_tem <= temp1){
        u8g.drawXBMP( 0, 18, 32, 32, u8g_logo_bits1);
        u8g.drawXBMP( 32, 18, 32, 32, u8g_logo_bits2);
        u8g.drawXBMP( 64, 18, 32, 32, u8g_logo_bits3);
        u8g.drawXBMP( 96, 18, 32, 32, u8g_logo_bits4);//太冷
      }else if (sensor_tem > temp1 && sensor_tem <= temp2){
        u8g.drawXBMP( 0, 18, 32, 32, u8g_logo_bits5);
        u8g.drawXBMP( 32, 18, 32, 32, u8g_logo_bits6);
        u8g.drawXBMP( 64, 18, 32, 32, u8g_logo_bits7);
        u8g.drawXBMP( 96, 18, 32, 32, u8g_logo_bits8);//稍微有点冷
      }else if (sensor_tem > temp2 && sensor_tem <= temp3){
        u8g.drawXBMP( 0, 18, 32, 32, u8g_logo_bits9);
        u8g.drawXBMP( 32, 18, 32, 32, u8g_logo_bits10);
        u8g.drawXBMP( 64, 18, 32, 32, u8g_logo_bits3);
        u8g.drawXBMP( 96, 18, 32, 32, u8g_logo_bits4);//稍微有点热
      }else{
        u8g.drawXBMP( 0, 18, 32, 32, u8g_logo_bits5);
        u8g.drawXBMP( 32, 18, 32, 32, u8g_logo_bits6);
        u8g.drawXBMP( 64, 18, 32, 32, u8g_logo_bits11);
        u8g.drawXBMP( 96, 18, 32, 32, u8g_logo_bits12);//太热
      }//判断温度显示温馨提示
    Serial.println("Somebody is in this area!");//有人时
    buzzer_speak = true;//打开蜂鸣器
    delay(500);           
    tone(6,3000,250);
    delay(500);
    tone(6,3000,250);
    delay(500);
    tone(6,3200,250);
    delay(500);
    tone(6,3500,250);
    delay(500);
    tone(6,3500,250);
    delay(500);
    tone(6,3200,250);
    delay(500);
    tone(6,3000,250);
    delay(500);
    tone(6,2700,250);
    delay(500);
    tone(6,2400,250);
    delay(500);
    tone(6,2400,250);
    delay(500);
    tone(6,2700,250);
    delay(500);
    tone(6,3000,250);
    delay(500);
    tone(6,3000,250);
    delay(500);
    tone(6,0,250);
    delay(250);
    tone(6,2700,150);
    delay(250);
    tone(6,2700,150);
    delay(500);
    tone(6,0,250);
    delay(500);
    tone(6,3000,250);
    delay(500);
    tone(6,3000,250);
    delay(500);
    tone(6,3200,250);
    delay(500);
    tone(6,3500,250);
    delay(500);
    tone(6,3500,250);
    delay(500);
    tone(6,3200,250);
    delay(500);
    tone(6,3000,250);
    delay(500);
    tone(6,2700,250);
    delay(500);
    tone(6,2400,250);
    delay(500);
    tone(6,2400,250);
    delay(500);
    tone(6,2700,250);
    delay(500);
    tone(6,3000,250);
    delay(500);
    tone(6,2700,250);
    delay(500);
    tone(6,0,250);
    delay(250);
    tone(6,2400,150);
    delay(250);
    tone(6,2400,150);
    delay(500);
    tone(6,0,250);//音乐
    buzzer_speak = false;//关闭蜂鸣器
    }else{
    u8g.drawXBMP( 0, 18, 32, 32, u8g_logo_bits13);
    u8g.drawXBMP( 32, 18, 32, 32, u8g_logo_bits14);
    u8g.drawXBMP( 64, 18, 32, 32, u8g_logo_bits15);
    u8g.drawXBMP( 96, 18, 32, 32, u8g_logo_bits16);
    Serial.println("No one!");//没有人时
    delay(500);
  }
}
void setup(void)
{
  pinMode(sensorPin, INPUT);
  Serial.begin(115200);
  pinMode(buzzer_pin, OUTPUT);
  Wire.begin(); 
}
void loop(void)
{
    u8g.firstPage();  
    do {
      draw();
    } 
    while( u8g.nextPage() );
}


